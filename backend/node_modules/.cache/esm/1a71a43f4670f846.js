let express,expressAsyncHandler,data,Product;_467‍.x([["default",()=>_467‍.o]]);_467‍.w("express",[["default",["express"],function(v){express=v}]]);_467‍.w("express-async-handler",[["default",["expressAsyncHandler"],function(v){expressAsyncHandler=v}]]);_467‍.w("../data.js",[["default",["data"],function(v){data=v}]]);_467‍.w("../models/productModel.js",[["default",["Product"],function(v){Product=v}]]);




const productRouter = express.Router();

productRouter.get(
  '/',
  expressAsyncHandler(async (req, res) => {
    const products = await Product.find({});
    res.send(products);
  })
);

productRouter.get(
  '/seed',
  expressAsyncHandler(async (req, res) => {
    // await Product.remove({});
    const createdProducts = await Product.insertMany(data.products);
    res.send({ createdProducts });
  })
);

productRouter.get(
  '/:id',
  expressAsyncHandler(async (req, res) => {
    const product = await Product.findById(req.params.id);
    if (product) {
      res.send(product);
    } else {
      res.status(404).send({ message: 'Product Not Found' });
    }
  })
);

_467‍.d(productRouter);