let express,mongoose,dotenv,productRouter,userRouter,orderRouter;_918‍.w("express",[["default",["express"],function(v){express=v}]]);_918‍.w("mongoose",[["default",["mongoose"],function(v){mongoose=v}]]);_918‍.w("dotenv",[["default",["dotenv"],function(v){dotenv=v}]]);_918‍.w("./routers/productRouter.js",[["default",["productRouter"],function(v){productRouter=v}]]);_918‍.w("./routers/userRouter.js",[["default",["userRouter"],function(v){userRouter=v}]]);_918‍.w("./routers/orderRouter.js",[["default",["orderRouter"],function(v){orderRouter=v}]]);






dotenv.config();

const app = express();
app.use(express.json());
app.use(express.urlencoded({ extended: true }));

mongoose.connect(process.env.MONGODB_URL || 'mongodb://localhost/mercado', {
  useNewUrlParser: true,
  useUnifiedTopology: true,
  useCreateIndex: true,
});
app.use('/api/users', userRouter);
app.use('/api/products', productRouter);
app.use('/api/orders', orderRouter);
app.get('/api/config/paypal', (req, res) => {
  res.send(process.env.PAYPAL_CLIENT_ID || 'sb');
});
app.get('/', (req, res) => {
  res.send('Server is ready');
});

app.use((err, req, res, next) => {
  res.status(500).send({ message: err.message });
});

const port = process.env.PORT || 5000;
app.listen(port, () => {
  console.log(`Serve at http://localhost:${port}`);
});


// "main": "index.js",